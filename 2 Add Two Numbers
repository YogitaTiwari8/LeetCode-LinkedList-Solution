/*
 * LeetCode: 2
 * Problem: Add Two Numbers
 * Link: https://leetcode.com/problems/add-two-numbers/
 *
 * Approach:
 * - Use a dummy node to build the result list.
 * - Traverse both input lists simultaneously.
 * - Add corresponding digits along with carry.
 * - If sum exceeds 9, carry will be used in the next iteration.
 * - Continue until both lists are traversed and no carry remains.
 */

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */

Solution
--
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        // Edge cases
        if (l1 == null) return l2;
        if (l2 == null) return l1;

        // Dummy node to simplify result list construction
        ListNode dummy = new ListNode(0);
        ListNode curr = dummy;
        int carry = 0;

        // Traverse both lists
        while (l1 != null || l2 != null || carry != 0) {
            int sum = carry;

            if (l1 != null) {
                sum += l1.val;
                l1 = l1.next;
            }

            if (l2 != null) {
                sum += l2.val;
                l2 = l2.next;
            }

            carry = sum / 10; // Update carry
            curr.next = new ListNode(sum % 10); // Create new node with single-digit result
            curr = curr.next;
        }

        return dummy.next;
    }
}
--
